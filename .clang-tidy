Checks: >
  -*,
  bugprone-*,
  -bugprone-easily-swappable-parameters,
  cert-*,
  clang-analyzer-*,
  concurrency-*,
  cppcoreguidelines-virtual-class-destructor,
  google-*,
  -google-explicit-constructor,
  -google-readability-braces-around-statements,
  hicpp-*,
  -hicpp-member-init,
  -hicpp-avoid-c-arrays,
  -hicpp-explicit-conversions,
  -hicpp-braces-around-statements,
  -hicpp-no-array-decay,
  misc-*,
  -misc-include-cleaner,
  -misc-const-correctness,
  -misc-non-private-member-variables-in-classes,
  mpi-*,
  openmp-*,
  -openmp-use-default-none,
  performance-*,
  portability-*,
  readability-*,
  -readability-identifier-length,
  -readability-magic-numbers,
  -readability-braces-around-statements,
  -readability-implicit-bool-conversion,

# modernize-*,
# -modernize-avoid-c-arrays,
# -modernize-use-ranges,
# -modernize-use-nodiscard,
# -modernize-use-trailing-return-type,

# WarningsAsErrors: '*'

SystemHeaders: false
HeaderFilterRegex: '(src)\/.*\.h'

CheckOptions:
  - { key: readability-function-cognitive-complexity.IgnoreMacros, value: true       }

  - { key: readability-identifier-naming.NamespaceCase,            value: lower_case }
  - { key: readability-identifier-naming.FunctionCase,             value: lower_case }
  - { key: readability-identifier-naming.StructCase,               value: CamelCase  }
  - { key: readability-identifier-naming.TemplateParameterCase,    value: CamelCase  }
  - { key: readability-identifier-naming.EnumConstantCase,         value: CamelCase  }

  - { key: readability-identifier-naming.ClassCase, value: CamelCase  }
  - { key: readability-identifier-naming.ClassIgnoredRegexp, value: '^(MPI_).*'  }

  - { key: readability-identifier-naming.MacroDefinitionCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.MacroDefinitionIgnoredRegexp, value: '^(PetscCall).*' }
