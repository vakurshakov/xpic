Checks: >
  -*,
  bugprone-*,
  -bugprone-easily-swappable-parameters,
  cert-*,
  clang-analyzer-*,
  concurrency-*,
  cppcoreguidelines-virtual-class-destructor,
  google-*,
  -google-explicit-constructor,
  -google-readability-braces-around-statements,
  readability-identifier-naming,

# hicpp-*,
# misc-*,
# modernize-*,
# mpi-*,
# openmp-*,
# performance-*,
# portability-*,
# readability-*,

# -hicpp-vararg,
# -hicpp-avoid-c-array,
# -misc-include-cleaner,
# -misc-non-private-member-variables-in-classes,
# -modernize-avoid-c-arrays,
# -modernize-use-ranges,
# -modernize-use-nodiscard,
# -modernize-use-trailing-return-type,
# -readability-identifier-length,
# -readability-magic-numbers,

# WarningsAsErrors: '*'

SystemHeaders: false
HeaderFilterRegex: '(src)\/.*\.h'

CheckOptions:
  - { key: readability-function-cognitive-complexity.IgnoreMacros, value: true       }

  - { key: readability-identifier-naming.NamespaceCase,            value: lower_case }
  - { key: readability-identifier-naming.FunctionCase,             value: lower_case }
  - { key: readability-identifier-naming.StructCase,               value: CamelCase  }
  - { key: readability-identifier-naming.TemplateParameterCase,    value: CamelCase  }
  - { key: readability-identifier-naming.EnumConstantCase,         value: CamelCase  }

  - { key: readability-identifier-naming.ClassCase, value: CamelCase  }
  - { key: readability-identifier-naming.ClassIgnoredRegexp, value: '^(MPI_).*'  }

  - { key: readability-identifier-naming.MacroDefinitionCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.MacroDefinitionIgnoredRegexp, value: '^(PetscCall).*' }
